% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/penCalc.R
\name{pencalc}
\alias{pencalc}
\title{pencalc}
\usage{
pencalc(age=list(age.entry=25
                       ,age.exit=60),
               wage=list(wage=25000
                        ,growth.rate=0.08
                        ,contribution.rate=0.2
                        ,initial.amount=0),
               inflation=list(mean.sd.inflation=c(0.04,0)
                             ,real=FALSE),
               inv.weights=list("lc"),
               returns=list(returns=data.frame(mean=c(0.07, 0.10, 0.16),
                                               sd=c(0, 0, 0.25)),
                            fees=c(monthly.fees.expenses=0.01,100)),
               annuity=list(proportion.annuitised=0.40,
                            price=4087))
}
\arguments{
\item{age}{List of two elements : \enumerate{ \item age.entry: Age at which a person enters the pension system. \item age.exit: Age at which a person exits the pension system. }}

\item{wage}{List of four elements: \enumerate{ \item wage: There
    are two choices: \enumerate{ \item Single Wage: A numeric entry
    of the starting wage \item Wage Vector: A vector of wages for
    each year a person is in the pension system.}  \item
    growth.rate: Annual wage growth. If a vector of wages is
    entered, then the values set in growth.rate should be 0. Else,
    there are two choices: \enumerate{ \item Constant Growth Rate:
    A single numeric entry of the wage growth rate \item Growth
    Rate Vector: A vector of numeric entries of wage growth
    rate. The length should be equal to 1 less than the total
    number of years a person is in the pension system. }

\item contribution.rate: Percentage of the wage to be invested in a
    portfolio. There are two available choices \enumerate{ \item
    Single contribution rate: A single numeric entry which will
    remain constant throughout. \item Contribution rate vector: A
    vector of numeric entries for each year the person is in the
    pension system.} \item initial.amount: Numeric entry signifying
    an amount accumulated before the simulation begins. }}

\item{inflation}{List of two elements: \enumerate{ \item
mean.sd.inflation: A vector with the annual mean and standard
deviation of the expected inflation. \item real: Logical symbol
(TRUE) to get real prices.}}

\item{inv.weights}{List of one element. There are two choices:
\enumerate{ \item Character "lc" to use the default life cycle
weights \item A matrix of investment weights with 3 column
providing weights for government bonds, corporate bonds and
equity respectively}}

\item{returns}{List of two elements: \enumerate{ \item returns: A
data frame of mean and standard deviation of government bonds,
corporate bonds and equity. \item fees: \enumerate{ \item
Monthly fees and expenses: The asset under management fees (in
%) to be deducted from portfolio returns every month. \item
Annual flat fee: Flat amount to be deducted at the end of each
year.}}}

\item{annuity}{List of two elements: \enumerate{ \item
proportion.annuitised: The proportion of accumulations to be
annuitised. \item price: The price of an annuity that pay Rs.1
for life. }}
}
\value{
Mean and standard deviation of pension, terminal price and
    replacement rate
}
\description{
Function to simulate pension outcomes
}
\examples{
pencalc(age=list(age.entry=25
                          ,age.exit=60),
                   wage=list(wage=25000
                            ,growth.rate=0.08
                         ,contribution.rate=0.2
                           ,initial.amount=0),
                   inflation=list(mean.sd.inflation=c(0.04,0)
                                 ,real=FALSE),
                   inv.weights=list("lc"),
                   returns=list(returns=data.frame(mean=c(0.07, 0.10, 0.16),
                                           sd=c(0, 0, 0.25)),
                                fees=c(monthly.fees.expenses=0.01,100)),
                  annuity=list(proportion.annuitised=0.40,
                               price=4087))
}
\author{
Renuka Sane, Arjun Gupta
}
